"use strict";

var _classCallCheck = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck");

var _possibleConstructorReturn = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn");

var _getPrototypeOf = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf");

var _inherits = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits");

var _wrapNativeSuper = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper");

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UnknownUserDefinedTypeError = void 0;
/**
 * This error indicates that the decoder was unable to locate a user-defined
 * type (struct, enum, or contract type) via its ID.  Unfortunately, we can't
 * always avoid this at the moment; we're hoping to make this more robust in
 * the future with Truffle DB.  In the meantime, it is at least worth noting that
 * you should not encounter this error if your entire project was written in
 * Solidity and all compiled at once.  Sorry.
 *
 * @Category Errors
 */

var UnknownUserDefinedTypeError = /*#__PURE__*/ function(_Error) {
    _inherits(UnknownUserDefinedTypeError, _Error);

    function UnknownUserDefinedTypeError(id, typeString) {
        var _this;

        _classCallCheck(this, UnknownUserDefinedTypeError);

        var message = "Cannot locate definition for ".concat(typeString, " (ID ").concat(id, ")");
        _this = _possibleConstructorReturn(this, _getPrototypeOf(UnknownUserDefinedTypeError).call(this, message));
        _this.name = "UnknownUserDefinedTypeError";
        _this.id = id;
        _this.typeString = typeString;
        return _this;
    }

    return UnknownUserDefinedTypeError;
}(_wrapNativeSuper(Error));

exports.UnknownUserDefinedTypeError = UnknownUserDefinedTypeError;