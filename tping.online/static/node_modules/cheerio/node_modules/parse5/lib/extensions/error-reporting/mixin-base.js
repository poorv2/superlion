'use strict';

var _classCallCheck = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck");

var _createClass = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass");

var _possibleConstructorReturn = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn");

var _getPrototypeOf = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf");

var _inherits = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits");

var Mixin = require('../../utils/mixin');

var ErrorReportingMixinBase = /*#__PURE__*/ function(_Mixin) {
    _inherits(ErrorReportingMixinBase, _Mixin);

    function ErrorReportingMixinBase(host, opts) {
        var _this;

        _classCallCheck(this, ErrorReportingMixinBase);

        _this = _possibleConstructorReturn(this, _getPrototypeOf(ErrorReportingMixinBase).call(this, host));
        _this.posTracker = null;
        _this.onParseError = opts.onParseError;
        return _this;
    }

    _createClass(ErrorReportingMixinBase, [{
        key: "_setErrorLocation",
        value: function _setErrorLocation(err) {
            err.startLine = err.endLine = this.posTracker.line;
            err.startCol = err.endCol = this.posTracker.col;
            err.startOffset = err.endOffset = this.posTracker.offset;
        }
    }, {
        key: "_reportError",
        value: function _reportError(code) {
            var err = {
                code: code,
                startLine: -1,
                startCol: -1,
                startOffset: -1,
                endLine: -1,
                endCol: -1,
                endOffset: -1
            };

            this._setErrorLocation(err);

            this.onParseError(err);
        }
    }, {
        key: "_getOverriddenMethods",
        value: function _getOverriddenMethods(mxn) {
            return {
                _err: function _err(code) {
                    mxn._reportError(code);
                }
            };
        }
    }]);

    return ErrorReportingMixinBase;
}(Mixin);

module.exports = ErrorReportingMixinBase;