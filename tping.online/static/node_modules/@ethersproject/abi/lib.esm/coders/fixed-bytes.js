"use strict";

import _classCallCheck from "/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits";
import {
    arrayify,
    hexlify
} from "@ethersproject/bytes";
import {
    Coder
} from "./abstract-coder"; // @TODO: Merge this with bytes

export var FixedBytesCoder = /*#__PURE__*/ function(_Coder) {
    _inherits(FixedBytesCoder, _Coder);

    function FixedBytesCoder(size, localName) {
        var _this;

        _classCallCheck(this, FixedBytesCoder);

        var name = "bytes" + String(size);
        _this = _possibleConstructorReturn(this, _getPrototypeOf(FixedBytesCoder).call(this, name, name, localName, false));
        _this.size = size;
        return _this;
    }

    _createClass(FixedBytesCoder, [{
        key: "encode",
        value: function encode(writer, value) {
            var data = arrayify(value);

            if (data.length !== this.size) {
                this._throwError("incorrect data length", value);
            }

            return writer.writeBytes(data);
        }
    }, {
        key: "decode",
        value: function decode(reader) {
            return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));
        }
    }]);

    return FixedBytesCoder;
}(Coder);