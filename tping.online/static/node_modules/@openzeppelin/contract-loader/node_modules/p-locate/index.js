'use strict';

var _toConsumableArray = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray");

var _objectSpread = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread");

var _regeneratorRuntime = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator");

var _asyncToGenerator = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator");

var _classCallCheck = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck");

var _possibleConstructorReturn = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn");

var _getPrototypeOf = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf");

var _inherits = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits");

var _wrapNativeSuper = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper");

var pLimit = require('p-limit');

var EndError = /*#__PURE__*/ function(_Error) {
    _inherits(EndError, _Error);

    function EndError(value) {
        var _this;

        _classCallCheck(this, EndError);

        _this = _possibleConstructorReturn(this, _getPrototypeOf(EndError).call(this));
        _this.value = value;
        return _this;
    }

    return EndError;
}(_wrapNativeSuper(Error)); // The input can also be a promise, so we await it


var testElement = /*#__PURE__*/ function() {
    var _ref = _asyncToGenerator( /*#__PURE__*/ _regeneratorRuntime.mark(function _callee(element, tester) {
        return _regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        _context.t0 = tester;
                        _context.next = 3;
                        return element;

                    case 3:
                        _context.t1 = _context.sent;
                        return _context.abrupt("return", (0, _context.t0)(_context.t1));

                    case 5:
                    case "end":
                        return _context.stop();
                }
            }
        }, _callee);
    }));

    return function testElement(_x, _x2) {
        return _ref.apply(this, arguments);
    };
}(); // The input can also be a promise, so we `Promise.all()` them both


var finder = /*#__PURE__*/ function() {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/ _regeneratorRuntime.mark(function _callee2(element) {
        var values;
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
            while (1) {
                switch (_context2.prev = _context2.next) {
                    case 0:
                        _context2.next = 2;
                        return Promise.all(element);

                    case 2:
                        values = _context2.sent;

                        if (!(values[1] === true)) {
                            _context2.next = 5;
                            break;
                        }

                        throw new EndError(values[0]);

                    case 5:
                        return _context2.abrupt("return", false);

                    case 6:
                    case "end":
                        return _context2.stop();
                }
            }
        }, _callee2);
    }));

    return function finder(_x3) {
        return _ref2.apply(this, arguments);
    };
}();

var pLocate = /*#__PURE__*/ function() {
    var _ref3 = _asyncToGenerator( /*#__PURE__*/ _regeneratorRuntime.mark(function _callee3(iterable, tester, options) {
        var limit, items, checkLimit;
        return _regeneratorRuntime.wrap(function _callee3$(_context3) {
            while (1) {
                switch (_context3.prev = _context3.next) {
                    case 0:
                        options = _objectSpread({
                            concurrency: Infinity,
                            preserveOrder: true
                        }, options);
                        limit = pLimit(options.concurrency); // Start all the promises concurrently with optional limit

                        items = _toConsumableArray(iterable).map(function(element) {
                            return [element, limit(testElement, element, tester)];
                        }); // Check the promises either serially or concurrently

                        checkLimit = pLimit(options.preserveOrder ? 1 : Infinity);
                        _context3.prev = 4;
                        _context3.next = 7;
                        return Promise.all(items.map(function(element) {
                            return checkLimit(finder, element);
                        }));

                    case 7:
                        _context3.next = 14;
                        break;

                    case 9:
                        _context3.prev = 9;
                        _context3.t0 = _context3["catch"](4);

                        if (!(_context3.t0 instanceof EndError)) {
                            _context3.next = 13;
                            break;
                        }

                        return _context3.abrupt("return", _context3.t0.value);

                    case 13:
                        throw _context3.t0;

                    case 14:
                    case "end":
                        return _context3.stop();
                }
            }
        }, _callee3, null, [
            [4, 9]
        ]);
    }));

    return function pLocate(_x4, _x5, _x6) {
        return _ref3.apply(this, arguments);
    };
}();

module.exports = pLocate; // TODO: Remove this for the next major release

module.exports.default = pLocate;