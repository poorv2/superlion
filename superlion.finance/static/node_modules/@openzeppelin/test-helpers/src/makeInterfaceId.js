var _require = require('web3-utils'),
    soliditySha3 = _require.soliditySha3;

function ERC165() {
    var functionSignatures = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var INTERFACE_ID_LENGTH = 4;
    var interfaceIdBuffer = functionSignatures.map(function(signature) {
            return soliditySha3(signature);
        }) // keccak256
        .map(function(h) {
                return Buffer.from(h.substring(2), 'hex').slice(0, 4);
            } // bytes4()
        ).reduce(function(memo, bytes) {
            for (var i = 0; i < INTERFACE_ID_LENGTH; i++) {
                memo[i] = memo[i] ^ bytes[i]; // xor
            }

            return memo;
        }, Buffer.alloc(INTERFACE_ID_LENGTH));
    return "0x".concat(interfaceIdBuffer.toString('hex'));
}

function ERC1820(interfaceName) {
    return soliditySha3(interfaceName); // keccak256
}

module.exports = {
    ERC165: ERC165,
    ERC1820: ERC1820
};