"use strict";

var _regeneratorRuntime = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator");

var _marked = /*#__PURE__*/ _regeneratorRuntime.mark(read);

var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function get() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});

var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null)
        for (var k in mod) {
            if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        }

    __setModuleDefault(result, mod);

    return result;
};

Object.defineProperty(exports, "__esModule", {
    value: true
});

var StorageRead = __importStar(require("./storage/read"));

var StackRead = __importStar(require("./stack/read"));

var BytesRead = __importStar(require("./bytes/read"));

var AstConstantRead = __importStar(require("./ast-constant/read"));

var TopicRead = __importStar(require("./topic/read"));

var SpecialRead = __importStar(require("./special/read"));

var errors_1 = require("./errors");

function read(pointer, state) {
    return _regeneratorRuntime.wrap(function read$(_context) {
        while (1) {
            switch (_context.prev = _context.next) {
                case 0:
                    _context.t0 = pointer.location;
                    _context.next = _context.t0 === "stack" ? 3 : _context.t0 === "storage" ? 4 : _context.t0 === "memory" ? 6 : _context.t0 === "calldata" ? 6 : _context.t0 === "eventdata" ? 6 : _context.t0 === "returndata" ? 6 : _context.t0 === "code" ? 7 : _context.t0 === "stackliteral" ? 9 : _context.t0 === "definition" ? 10 : _context.t0 === "special" ? 11 : _context.t0 === "eventtopic" ? 12 : _context.t0 === "nowhere" ? 13 : 14;
                    break;

                case 3:
                    return _context.abrupt("return", StackRead.readStack(pointer, state));

                case 4:
                    return _context.delegateYield(StorageRead.readStorage(pointer, state), "t1", 5);

                case 5:
                    return _context.abrupt("return", _context.t1);

                case 6:
                    return _context.abrupt("return", BytesRead.readBytes(pointer, state));

                case 7:
                    return _context.delegateYield(BytesRead.readCode(pointer, state), "t2", 8);

                case 8:
                    return _context.abrupt("return", _context.t2);

                case 9:
                    return _context.abrupt("return", StackRead.readStackLiteral(pointer));

                case 10:
                    return _context.abrupt("return", AstConstantRead.readDefinition(pointer));

                case 11:
                    return _context.abrupt("return", SpecialRead.readSpecial(pointer, state));

                case 12:
                    return _context.abrupt("return", TopicRead.readTopic(pointer, state));

                case 13:
                    throw new errors_1.DecodingError({
                        kind: "UnusedImmutableError"
                    });

                case 14:
                case "end":
                    return _context.stop();
            }
        }
    }, _marked);
}

exports.default = read;