"use strict";

var _classCallCheck = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck");

var _createClass = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass");

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Web3InterfaceAdapter = void 0;

var shim_1 = require("../../shim");

var Web3InterfaceAdapter = /*#__PURE__*/ function() {
    function Web3InterfaceAdapter() {
        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            provider = _ref.provider,
            networkType = _ref.networkType;

        _classCallCheck(this, Web3InterfaceAdapter);

        this.web3 = new shim_1.Web3Shim({
            provider: provider,
            networkType: networkType
        });
    }

    _createClass(Web3InterfaceAdapter, [{
        key: "getNetworkId",
        value: function getNetworkId() {
            return this.web3.eth.net.getId();
        }
    }, {
        key: "getBlock",
        value: function getBlock(block) {
            return this.web3.eth.getBlock(block);
        }
    }, {
        key: "getTransaction",
        value: function getTransaction(tx) {
            return this.web3.eth.getTransaction(tx);
        }
    }, {
        key: "getTransactionReceipt",
        value: function getTransactionReceipt(tx) {
            return this.web3.eth.getTransactionReceipt(tx);
        }
    }, {
        key: "getBalance",
        value: function getBalance(address) {
            return this.web3.eth.getBalance(address);
        }
    }, {
        key: "getCode",
        value: function getCode(address) {
            return this.web3.eth.getCode(address);
        }
    }, {
        key: "getAccounts",
        value: function getAccounts() {
            return this.web3.eth.getAccounts();
        }
    }, {
        key: "estimateGas",
        value: function estimateGas(transactionConfig) {
            return this.web3.eth.estimateGas(transactionConfig);
        }
    }, {
        key: "getBlockNumber",
        value: function getBlockNumber() {
            return this.web3.eth.getBlockNumber();
        }
    }]);

    return Web3InterfaceAdapter;
}();

exports.Web3InterfaceAdapter = Web3InterfaceAdapter;