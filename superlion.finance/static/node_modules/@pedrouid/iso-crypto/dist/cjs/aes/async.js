"use strict";

var _regeneratorRuntime = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator");

var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }

    return new(P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }

        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }

        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }

        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.aesCbcDecrypt = exports.aesCbcEncrypt = void 0;

var helpers_1 = require("../helpers");

function aesCbcEncrypt(iv, key, data) {
    return __awaiter(this, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime.mark(function _callee() {
        var result;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        if (!helpers_1.isBrowser()) {
                            _context.next = 6;
                            break;
                        }

                        _context.next = 3;
                        return helpers_1.browserAesEncrypt(iv, key, data);

                    case 3:
                        result = _context.sent;
                        _context.next = 7;
                        break;

                    case 6:
                        if (helpers_1.isNode()) {
                            result = helpers_1.nodeAesEncrypt(iv, key, data);
                        } else {
                            result = helpers_1.fallbackAesEncrypt(iv, key, data);
                        }

                    case 7:
                        return _context.abrupt("return", result);

                    case 8:
                    case "end":
                        return _context.stop();
                }
            }
        }, _callee);
    }));
}

exports.aesCbcEncrypt = aesCbcEncrypt;

function aesCbcDecrypt(iv, key, data) {
    return __awaiter(this, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime.mark(function _callee2() {
        var result;
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
            while (1) {
                switch (_context2.prev = _context2.next) {
                    case 0:
                        if (!helpers_1.isBrowser()) {
                            _context2.next = 6;
                            break;
                        }

                        _context2.next = 3;
                        return helpers_1.browserAesDecrypt(iv, key, data);

                    case 3:
                        result = _context2.sent;
                        _context2.next = 7;
                        break;

                    case 6:
                        if (helpers_1.isNode()) {
                            result = helpers_1.nodeAesDecrypt(iv, key, data);
                        } else {
                            result = helpers_1.fallbackAesDecrypt(iv, key, data);
                        }

                    case 7:
                        return _context2.abrupt("return", result);

                    case 8:
                    case "end":
                        return _context2.stop();
                }
            }
        }, _callee2);
    }));
}

exports.aesCbcDecrypt = aesCbcDecrypt;