var _classCallCheck = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck");

var _possibleConstructorReturn = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn");

var _getPrototypeOf = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf");

var _inherits = require("/Applications/XAMPP/xamppfiles/htdocs/aa-superlion-mainnet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits");

var ProviderSubprovider = require('./json-rpc-engine-middleware');

var createSubscriptionManager = require('eth-json-rpc-filters/subscriptionManager');

var SubscriptionsSubprovider = /*#__PURE__*/ function(_ProviderSubprovider) {
    "use strict";

    _inherits(SubscriptionsSubprovider, _ProviderSubprovider);

    function SubscriptionsSubprovider() {
        _classCallCheck(this, SubscriptionsSubprovider);

        return _possibleConstructorReturn(this, _getPrototypeOf(SubscriptionsSubprovider).call(this, function(_ref) {
            var blockTracker = _ref.blockTracker,
                provider = _ref.provider,
                engine = _ref.engine;

            var _createSubscriptionMa = createSubscriptionManager({
                    blockTracker: blockTracker,
                    provider: provider
                }),
                events = _createSubscriptionMa.events,
                middleware = _createSubscriptionMa.middleware; // forward subscription events on the engine


            events.on('notification', function(data) {
                return engine.emit('data', null, data);
            }); // return the subscription install/remove middleware

            return middleware;
        }));
    }

    return SubscriptionsSubprovider;
}(ProviderSubprovider);

module.exports = SubscriptionsSubprovider;